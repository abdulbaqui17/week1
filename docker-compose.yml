version: "3.9"

services:
  postgres:
    image: timescale/timescaledb:latest-pg16
    command: ["postgres", "-c", "shared_preload_libraries=timescaledb"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD","redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  httpserver:
    build: ./httpserver
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8081:8081"
    command: ["node","dist/index.js"]

  wsserver:
    build: ./wsserver
    env_file: .env
    depends_on:
      redis:
        condition: service_started
    ports:
      - "4000:4000"

  poller:
    build: ./poller
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["node","dist/index.js"]
    restart: unless-stopped

  client:
    build: ./client
    env_file: .env
    depends_on:
      - httpserver
      - wsserver
    ports:
      - "80:80"

volumes:
  pgdata:
